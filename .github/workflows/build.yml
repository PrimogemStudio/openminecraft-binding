name: Build
on: [push, pull_request]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            name: Windows (x86_64)
            plat: windows
            arch: x64

          - os: windows-latest
            name: Windows (x86)
            plat: windows
            arch: x86

          - os: windows-latest
            name: Windows (Arm64)
            plat: windows
            arch: arm64

          - os: ubuntu-latest
            name: Linux
            plat: linux
            arch: x64

          - os: macos-14
            name: MacOS
            plat: macos-darwin
            arch: arm64

          - os: macos-13
            name: MacOS (x86)
            plat: macos-darwin
            arch: x64

    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install LLVM and Clang
        if: matrix.plat != 'windows'
        uses: PrimogemStudio/openminecraft-llvm-install@main
        with:
          arm: ${{ matrix.plat == 'macos-darwin' && matrix.arch == 'arm64' }}

      - name: Install xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: branch@master

      - name: Build MacOS
        if: matrix.plat == 'macos-darwin'
        run: |
          xmake f --toolchain=llvm --sdk="${{ env.LLVM_PATH }}" -y
          xmake -y -v

      - name: Build Linux
        if: matrix.plat == 'linux'
        run: |
          sudo apt update
          sudo apt install gcc-multilib 
          sudo apt install g++-multilib
          sudo apt install g++-aarch64-linux-gnu
          sudo apt install libc6-dev-arm64-cross
        xmake f --toolchain=llvm --sdk="${{ env.LLVM_PATH }}" --cflags="--target=aarch64-linux-gnu" --cxxflags="--target=aarch64-linux-gnu" --ldflags="--target=aarch64-linux-gnu" -p arm64 -yc
          xmake -y -v

      - name: Configure MSVC
        if: matrix.plat == 'windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build Windows
        if: matrix.plat == 'windows'
        run: |
          xmake f --toolchain=msvc -a ${{ matrix.arch }}
          xmake -y -v
          dumpbin /headers build\windows\${{ matrix.arch }}\release\test.dll

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.plat }}-${{ matrix.arch }}
          path: build/
 
